"use strict";(()=>{var e={};e.id=414,e.ids=[414],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,n)=>{Object.defineProperty(n,"l",{enumerable:!0,get:function(){return function e(n,o){return o in n?n[o]:"then"in n&&"function"==typeof n.then?n.then(n=>e(n,o)):"function"==typeof n&&"default"===o?n:void 0}}})},593:(e,n,o)=>{o.r(n),o.d(n,{config:()=>u,default:()=>l,routeModule:()=>d});var t={};o.r(t),o.d(t,{default:()=>c});var r=o(1802),a=o(7153),i=o(6249),s=o(2250);async function c(e,n){try{await (0,s.u)(),n.status(200).json({message:"Database connected successfully"})}catch(e){n.status(500).json({error:"Database connection failed"})}}let l=(0,i.l)(t,"default"),u=(0,i.l)(t,"config"),d=new r.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/test-db",pathname:"/api/test-db",bundlePath:"",filename:""},userland:t})},2250:(e,n,o)=>{o.d(n,{u:()=>s});var t=o(1185),r=o.n(t);let a=process.env.MONGODB_URI||"mongodb://localhost:27017/learnopolis";if(!a)throw Error("Please define the MONGODB_URI environment variable");let i=global.mongoose;async function s(){return i.conn||(i.promise||(console.log("Connecting to MongoDB..."),i.promise=r().connect(a,{bufferCommands:!1}).then(e=>(console.log("Connected to MongoDB"),e)).catch(e=>{throw console.error("Error connecting to MongoDB:",e),e})),i.conn=await i.promise),i.conn}i||(i=global.mongoose={conn:null,promise:null}),r().connection.on("error",e=>{console.error("MongoDB connection error:",e)})},7153:(e,n)=>{var o;Object.defineProperty(n,"x",{enumerable:!0,get:function(){return o}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(o||(o={}))},1802:(e,n,o)=>{e.exports=o(145)}};var n=require("../../webpack-api-runtime.js");n.C(e);var o=n(n.s=593);module.exports=o})();