"use strict";(()=>{var e={};e.id=11,e.ids=[11],e.modules={8432:e=>{e.exports=require("bcryptjs")},1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},9055:(e,t,n)=>{n.r(t),n.d(t,{config:()=>p,default:()=>m,routeModule:()=>g});var r={};n.r(r),n.d(r,{default:()=>d});var o=n(1802),s=n(7153),a=n(6249),i=n(8432),u=n.n(i),l=n(2250),c=n(7513);async function d(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method not allowed"});try{let{username:n,name:r,email:o,password:s}=e.body;if(!o||!s)return t.status(400).json({message:"Missing required fields"});if(await (0,l.u)(),await c.Z.findOne({email:o}))return t.status(400).json({message:"User already exists with this email"});if(r&&await c.Z.findOne({username:r}))return t.status(400).json({message:"Username already taken"});let a=await u().hash(s,12),i={username:n,name:r,email:o,password:a,points:0,level:1,streak:0,progress:[],achievements:[],dailyChallenges:[],certificates:[]};r&&""!==r.trim()&&(i.username=r);let d=await c.Z.create(i);return t.status(201).json({user:d})}catch(e){if(e instanceof Error)return t.status(500).json({message:e.message});return t.status(500).json({message:"An unexpected error occurred"})}}let m=(0,a.l)(r,"default"),p=(0,a.l)(r,"config"),g=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/auth/signup",pathname:"/api/auth/signup",bundlePath:"",filename:""},userland:r})},2250:(e,t,n)=>{n.d(t,{u:()=>i});var r=n(1185),o=n.n(r);let s=process.env.MONGODB_URI||"mongodb://localhost:27017/learnopolis";if(!s)throw Error("Please define the MONGODB_URI environment variable");let a=global.mongoose;async function i(){return a.conn||(a.promise||(console.log("Connecting to MongoDB..."),a.promise=o().connect(s,{bufferCommands:!1}).then(e=>(console.log("Connected to MongoDB"),e)).catch(e=>{throw console.error("Error connecting to MongoDB:",e),e})),a.conn=await a.promise),a.conn}a||(a=global.mongoose={conn:null,promise:null}),o().connection.on("error",e=>{console.error("MongoDB connection error:",e)})},7513:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(1185),o=n.n(r);let s=new(o()).Schema({courseId:{type:o().Schema.Types.ObjectId,ref:"Course"},completedModules:[{type:Number}],quizScores:{type:Map,of:Number},completed:{type:Boolean,default:!1}}),a=new(o()).Schema({title:String,description:String,icon:String,unlockedAt:Date}),i=new(o()).Schema({challengeId:{type:o().Schema.Types.ObjectId,ref:"DailyChallenge"},completed:Boolean,completedAt:Date}),u=new(o()).Schema({courseId:{type:o().Schema.Types.ObjectId,ref:"Course"},issuedAt:Date,certificateUrl:String}),l=new(o()).Schema({name:String,email:{type:String,required:!0,unique:!0},username:{type:String},password:{type:String,required:!0},image:String,points:{type:Number,default:0},level:{type:Number,default:1},streak:{type:Number,default:0},progress:[s],achievements:[a],dailyChallenges:[i],certificates:[u]}),c=o().models.User||o().model("User",l)},7153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},1802:(e,t,n)=>{e.exports=n(145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var n=t(t.s=9055);module.exports=n})();