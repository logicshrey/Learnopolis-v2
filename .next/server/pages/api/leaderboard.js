"use strict";(()=>{var e={};e.id=352,e.ids=[352],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,o){return o in t?t[o]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,o)):"function"==typeof t&&"default"===o?t:void 0}}})},5912:(e,t,o)=>{o.r(t),o.d(t,{config:()=>u,default:()=>d,routeModule:()=>m});var n={};o.r(n),o.d(n,{default:()=>c});var r=o(1802),a=o(7153),l=o(6249),i=o(2250),s=o(7513);async function c(e,t){if("GET"!==e.method)return t.status(405).json({message:"Method not allowed"});try{await (0,i.u)();let o=e.query.timeframe||"all",n={};if("week"===o){let e=new Date;e.setDate(e.getDate()-7),n={updatedAt:{$gte:e}}}else if("month"===o){let e=new Date;e.setMonth(e.getMonth()-1),n={updatedAt:{$gte:e}}}let r=(await s.Z.find(n).select("name email level points progress").sort({points:-1,level:-1}).limit(50)).map(e=>{let t=e.progress.filter(e=>e.completed).length;return{_id:e._id,name:e.name,email:e.email,level:e.level,points:e.points,coursesCompleted:t}});t.status(200).json({users:r})}catch(e){console.error("Error fetching leaderboard:",e),t.status(500).json({message:"Error fetching leaderboard"})}}let d=(0,l.l)(n,"default"),u=(0,l.l)(n,"config"),m=new r.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/leaderboard",pathname:"/api/leaderboard",bundlePath:"",filename:""},userland:n})},2250:(e,t,o)=>{o.d(t,{u:()=>i});var n=o(1185),r=o.n(n);let a=process.env.MONGODB_URI||"mongodb://localhost:27017/learnopolis";if(!a)throw Error("Please define the MONGODB_URI environment variable");let l=global.mongoose;async function i(){return l.conn||(l.promise||(console.log("Connecting to MongoDB..."),l.promise=r().connect(a,{bufferCommands:!1}).then(e=>(console.log("Connected to MongoDB"),e)).catch(e=>{throw console.error("Error connecting to MongoDB:",e),e})),l.conn=await l.promise),l.conn}l||(l=global.mongoose={conn:null,promise:null}),r().connection.on("error",e=>{console.error("MongoDB connection error:",e)})},7513:(e,t,o)=>{o.d(t,{Z:()=>d});var n=o(1185),r=o.n(n);let a=new(r()).Schema({courseId:{type:r().Schema.Types.ObjectId,ref:"Course"},completedModules:[{type:Number}],quizScores:{type:Map,of:Number},completed:{type:Boolean,default:!1}}),l=new(r()).Schema({title:String,description:String,icon:String,unlockedAt:Date}),i=new(r()).Schema({challengeId:{type:r().Schema.Types.ObjectId,ref:"DailyChallenge"},completed:Boolean,completedAt:Date}),s=new(r()).Schema({courseId:{type:r().Schema.Types.ObjectId,ref:"Course"},issuedAt:Date,certificateUrl:String}),c=new(r()).Schema({name:String,email:{type:String,required:!0,unique:!0},username:{type:String},password:{type:String,required:!0},image:String,points:{type:Number,default:0},level:{type:Number,default:1},streak:{type:Number,default:0},progress:[a],achievements:[l],dailyChallenges:[i],certificates:[s]}),d=r().models.User||r().model("User",c)},7153:(e,t)=>{var o;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return o}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(o||(o={}))},1802:(e,t,o)=>{e.exports=o(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var o=t(t.s=5912);module.exports=o})();